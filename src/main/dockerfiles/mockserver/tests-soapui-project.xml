<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project xmlns:con="http://eviware.com/soapui/config" id="86dcfa67-dc95-4aa9-ada8-a27fb93afdc3"
                    activeEnvironment="Default"
                    name="RESTWeatherDataProject" soapui-version="5.5.0" abortOnError="false"
                    runType="SEQUENTIAL">
    <con:settings/>
    <con:interface xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="con:RestService"
                   id="79e3aeca-ec01-4ebc-a29f-467bfbc9d0bb" wadlVersion="http://wadl.dev.java.net/2009/02"
                   name="http://localhost:8087"
                   type="rest">
        <con:settings/>
        <con:definitionCache type="TEXT" rootPart=""/>
        <con:endpoints>
            <con:endpoint>http://amskel.local:8089/</con:endpoint>
            <con:endpoint>http://localhost:8087</con:endpoint>
        </con:endpoints>
        <con:resource name="Weather" path="/weather" id="5e68599d-924e-49a1-81bb-5239ea78e87d">
            <con:settings/>
            <con:parameters>
                <con:parameter>
                    <con:name>city</con:name>
                    <con:value>Amsterdam</con:value>
                    <con:style>QUERY</con:style>
                    <con:default>Amsterdam</con:default>
                    <con:path xsi:nil="true"/>
                    <con:description xsi:nil="true"/>
                </con:parameter>
                <con:parameter>
                    <con:name>appid</con:name>
                    <con:value>1231231234</con:value>
                    <con:style>QUERY</con:style>
                    <con:default>1231231234</con:default>
                    <con:path xsi:nil="true"/>
                    <con:description xsi:nil="true"/>
                </con:parameter>
            </con:parameters>
            <con:method name="Weather 1" id="ea3870e1-a41c-400e-b51b-9b1351a5b1b4" method="GET">
                <con:settings/>
                <con:parameters/>
                <con:representation type="RESPONSE">
                    <con:mediaType xsi:nil="true"/>
                    <con:status>0</con:status>
                    <con:params/>
                    <con:element>data</con:element>
                </con:representation>
                <con:representation type="RESPONSE">
                    <con:mediaType xsi:nil="true"/>
                    <con:status>0</con:status>
                    <con:params/>
                    <con:element>data</con:element>
                </con:representation>
                <con:representation type="RESPONSE">
                    <con:mediaType xsi:nil="true"/>
                    <con:status>0</con:status>
                    <con:params/>
                    <con:element>data</con:element>
                </con:representation>
                <con:representation type="RESPONSE">
                    <con:mediaType xsi:nil="true"/>
                    <con:status>0</con:status>
                    <con:params/>
                    <con:element>data</con:element>
                </con:representation>
                <con:representation type="RESPONSE">
                    <con:mediaType xsi:nil="true"/>
                    <con:status>0</con:status>
                    <con:params/>
                    <con:element>data</con:element>
                </con:representation>
                <con:representation type="RESPONSE">
                    <con:mediaType xsi:nil="true"/>
                    <con:status>0</con:status>
                    <con:params/>
                    <con:element>data</con:element>
                </con:representation>
                <con:representation type="RESPONSE">
                    <con:mediaType xsi:nil="true"/>
                    <con:status>0</con:status>
                    <con:params/>
                    <con:element>data</con:element>
                </con:representation>
                <con:representation type="RESPONSE">
                    <con:mediaType>application/xml</con:mediaType>
                    <con:status>200</con:status>
                    <con:params/>
                </con:representation>
                <con:request name="Request 1" id="3e9fbd52-b435-422b-84ba-57ffdfd8f6ca" mediaType="application/json">
                    <con:settings>
                        <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/>
                        </con:setting>
                    </con:settings>
                    <con:endpoint>http://localhost:8089</con:endpoint>
                    <con:request/>
                    <con:originalUri>http://localhost/weather</con:originalUri>
                    <con:credentials>
                        <con:authType>No Authorization</con:authType>
                    </con:credentials>
                    <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
                    <con:jmsPropertyConfig/>
                    <con:parameters>
                        <con:entry key="city" value="Amsterdam"/>
                        <con:entry key="appid" value="1231231234"/>
                    </con:parameters>
                    <con:parameterOrder>
                        <con:entry>city</con:entry>
                        <con:entry>appid</con:entry>
                    </con:parameterOrder>
                </con:request>
            </con:method>
        </con:resource>
    </con:interface>
    <con:restMockService id="8e5efcda-370d-4254-b1c6-dbf29dd350f2" port="8089" path="/" host="amskel.local"
                         name="weatherMockService">
        <con:settings/>
        <con:properties/>
        <con:restMockAction name="/weather" method="GET" resourcePath="/weather"
                            id="58ff3345-6de9-4041-8b94-8fd2c610060a">
            <con:settings/>
            <con:defaultResponse>Response 1</con:defaultResponse>
            <con:dispatchStyle>SEQUENCE</con:dispatchStyle>
            <con:dispatchPath>/*
                // Script dispatcher is used to select a response based on the incoming request.
                // Here are few examples showing how to match based on path, query param, header and body

                // Match based on path
                def requestPath = mockRequest.getPath()
                log.info "Path: "+ requestPath

                if( requestPath.contains("json") )
                {
                // return the name of the response you want to dispatch
                return "JSON Response"
                }


                // Match based on query parameter
                def queryString = mockRequest.getRequest().getQueryString()
                log.info "QueryString: " + queryString

                if( queryString.contains("stockholm") )
                {
                // return the name of the response you want to dispatch
                return "Response Stockholm"
                }
                else if( queryString.contains("london") )
                {
                // return the name of the response you want to dispatch
                return "Response London"
                }


                // Match based on header
                def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
                log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

                if( acceptEncodingHeaderList.contains("gzip,deflate") )
                {
                // return the name of the response you want to dispatch
                return "GZiped Response"
                }


                // Match based on body
                def requestBody = mockRequest.getRequestContent()
                log.info "Request body: " + requestBody

                if( requestBody.contains("some data") )
                {
                // return the name of the response you want to dispatch
                return "Response N"
                }
                */
            </con:dispatchPath>
            <con:response name="Response 1" id="a8606592-b2ce-4342-a530-585ecc339a85" httpResponseStatus="200"
                          mediaType="application/json">
                <con:settings/>
                <con:responseContent>{
                    "coord": {
                    "lon": 4.89,
                    "lat": 52.37
                    },
                    "weather": [
                    {
                    "id": 801,
                    "main": "Clouds",
                    "description": "few clouds",
                    "icon": "02d"
                    }
                    ],
                    "base": "stations",
                    "main": {
                    "temp": 287.59,
                    "feels_like": 278.93,
                    "temp_min": 286.48,
                    "temp_max": 288.71,
                    "pressure": 997,
                    "humidity": 47
                    },
                    "visibility": 10000,
                    "wind": {
                    "speed": 10.3,
                    "deg": 230
                    },
                    "clouds": {
                    "all": 20
                    },
                    "dt": 1591447231,
                    "sys": {
                    "type": 1,
                    "id": 1524,
                    "country": "NL",
                    "sunrise": 1591413648,
                    "sunset": 1591473471
                    },
                    "timezone": 7200,
                    "id": 2759794,
                    "name": "Amsterdam",
                    "cod": 200
                    }
                </con:responseContent>
            </con:response>
        </con:restMockAction>
    </con:restMockService>
    <con:properties/>
    <con:wssContainer/>
    <con:oAuth2ProfileContainer/>
    <con:oAuth1ProfileContainer/>
    <con:sensitiveInformation/>
</con:soapui-project>